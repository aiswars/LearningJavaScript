LearningJavaScript
avaScript is used to add interactivity to websites, to develop mobile apps, desktop applications, games and nowadays JavaScript can be used for machine learning and AI. JavaScript (JS) has increased in popularity in recent years and has been the leading programming language for six c

Install Node.js

by opening our device terminal or command prompt.
asabeneh $ node -v
v12.14.0

node -v   >> v16.14.0


To open the Chrome console using a keyboard shortcut.
Windows/Linux:
Ctl+Shift+J 
OR
Windows:
Ctl+Shift+I

on console - JS CODE can be written and can see JS ouput here
 The Google Console V8 engine changes your JavaScript code to machine code. Let us write a JavaScript code on the Google Chrome console

console/log() >> abuiltin functon to display data - input data as an argument
To write our first JavaScript code, we used a built-in function console.log(). We passed an argument as input data, and the function displays the output. We passed 'Hello, World' as input data or argument in the console.log() function.

console.log('Hello, World!')
Console.log with Multiple Arguments
The console.log() function can take multiple parameters separated by commas. The syntax looks like as follows:console.log(param1, param2, param3)

console.log('Hello', 'World', '!')
console.log('HAPPY', 'NEW', 'YEAR', 2020)
console.log('Welcome', 'to', 30, 'Days', 'Of', 'JavaScript')



console.log(2 + 3) // Addition
console.log(3 - 2) // Subtraction
console.log(2 * 3) // Multiplication
console.log(3 / 2) // Division
console.log(3 % 2) // Modulus - finding remainder
console.log(3 ** 2) // Exponentiation 3 ** 2 == 3 * 3

//a pop up alert message using the alert() built-in function.
alert("Hello, World!");   //popup window - this worked!!

Code Editor  - VS Code
Installing Visual Studio Code

JavaScript can be added to a web page in three different ways:

1.Inline script
2.Internal script
3.External script 

  External script  >> Multiple External scripts
  
  Using VSCode editor
Create a project folder on your desktop or in any location, name it 30DaysOfJS and create an index.html file in the project folder. Then paste the following code and open it in a browser
Open this folder - 30DaysOfJS in VSCode
create an index.html file 







The internal script can be written in the head or the body, but it is preferred to put it on the body of the HTML document.
External Script
Similar to the internal script, the external script link can be on the header or body, but it is preferred to put it in the body.

. All files ending with .js extension are JavaScript files. 

. The following are JavaScript primitive data types:String, Number, Boolean, undefined, Null, and Symbol.

Strings
A collection of one or more characters between two single quotes, double quotes, or backticks

Undefined
In JavaScript, if we don't assign a value to a variable, the value is undefined. In addition to that, if a function is not returning anything, it returns undefined.

let firstName
console.log(firstName) // undefined, because it is not assigned to a value yet

Checking Data Types
To check the data type of a certain variable, we use the typeof operator. See the following example.

console.log(typeof 'Asabeneh') // string
console.log(typeof 5) // number
console.log(typeof true) // boolean
console.log(typeof null) // object type
console.log(typeof undefined) // undefined

Variables
Variables are containers of data. Variables are used to store data in a memory location. When a variable is declared, a memory location is reserved. When a variable is assigned to a value (data), the memory space will be filled with that data. To declare a variable, we use var, let, or const keywords.
or a variable that changes at a different time, we use let. If the data does not change at all, we use const. For example, PI, country name, gravity do not change, and we can use const. We will not use var in this challenge and I don't recommend you to use it. It is error prone way of declaring variable it has lots of leak

A valid JavaScript variable name must follow the following rules:

A JavaScript variable name should not begin with a number.
A JavaScript variable name does not allow special characters except dollar sign and underscore.
A JavaScript variable name follows a camelCase convention.
A JavaScript variable name should not have space between words.














