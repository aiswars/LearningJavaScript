pgming with mosh
------------------------
data type var was only ealier till ES6 version
now let,const and var available

Node js ia a c++ program with V8 engine of google chrome JS engine
Node js is a javascript runtime bulit on Chrome's V8 script engine.

executing on VSCode editor
in VSCOde > new file - index.html > type ! press tab - to get a default html
open extensions tab >> search for live server - Ritwick Dey dev local server>> install live server - to serve the webapplicatins--  
then restart vscode >> explorer tab then right click index.html - open with live server to open the default browser/chrome pointed to the adrress- from thats where the webapplication is served from
html is the contents on the web (webcontents) and js is the behavior for this webelements like- what to do when hover on the webelement, hiding oe showing the elements- how a webpage should behave

its better to practice putting <script> tag should be at the bottom of the html file in <body> - 2 reasons
1. browser parses file from top to the bottom so if the js is in top <head> section then lot of js code might be there so browser might be busy parsing and executing this js code 
    and it wont be able to render the content of the page this will create a bad user experience - user might see a blank space or white space while the browser is busy parsing and executing the 
    js code
2. almost always the code that is inbetween script elements needs to talk  to the elements on this webpage. like hiding or showing the elements so by adding the script at bottom
    it is ensured that the elements are rendered by beowser. there are exception for this rule like in some cases the jscode has to be in the head section, but that are exceptions.
so js can be written in html file in <script> tag - inline js
but for a huge application this is not the right way - the js code has to be in separate files from the html page. combine these js files as bundle and there are ways to serve to the application
to separate the js from html file - create a file with extension-  .js >> index.js   >>>  
and then in html file -index.html put this index.js file has to be refrenced to the index.html file - in <script attribute src and set to index.js need to refrence that file to here
 <script src= "index.js">

executing on node js
go the folder location open command prompt and type node index.js -- the ouptut should be heelo world as in index.js file
node js--node js is program that includes google's v8 javascript engine - a runtime environment to execute js code

executing on cmd prompt >> go the folder location open cmd prompt > type node index.js - output should be hello world same as in the index.js file

in VSCode there is an integrated terminal>> open that - VSCOde>View>Integrated terminal - will open with folder pointing to the current working folder- the same folder where the index.js and index.html files are present
or open new terminal- select the workong folder- in terminal type node index.js 





Data type
Data type var was only ealier till ES6 version
now let,const and var available

Node js ia a c++ program with V8 engine of google chrome JS engine
Node js is a javascript runtime bulit on Chrome's V8 script engine.

by default the value of variables in js is undefined 
let name;
console.log(name);
can initialize the value for variables >> 
let name = 'ice';
console.log(name);

create a new .js file and give its reference in html file in <script src=

let datatype - for variables
rules for the names 
canot be a reserved keywords - like if, while
should be meaningful
cannot be number
cannot contain space or hyphen (-)
should be in camelCase
are case sensitive - let firstName and let FirstName are different
can declare multiple variables in same line - let firstName = 'ice' , lastName;

const for declaring constants
const InterestRate = 0.3;


Primitive data types/values types
-------------------------------------

String - let name = 'ice'; //string literal - the type is String
Number - let age = 25; //number literal - the type is number
boolean - let isClear = false; //boolean literal - the type is boolean
undefined - let name; //if no value assigned by default the value is set as undefined. can set explicitly >> let name1 = undefined; - the type and value is undefined
            let name1 = undefined; >> so here the value is undefined,  the type is also undefined - typeof name1 >> undefined 
null - to clear the value of a varibale  - let selectedColor = null //string literal >> typeof selectedColor is object -  the type is object

symbol - ?? in es6

typeof - to use to dtermine the the type of the variable - typeof name >> String,  typeof selectedColor is object
 typeof name1 >> undefined 

dynamic language type of the variable can be changed at runtime. can be is determined at runtime

but if name = 1 is given then typedef name will give as number.
Java is statci language = String name ='ice' cannot be chnaged to 1 - will give error



Reference tYpes
------------------

object
Array
Function

object - like a real world object.
let or const can be used.
let person = {};  //object literal -{}
let person =  {}; - between {} one or more key values can be paired.
let person = {
    name : 'ice' ,
    age : 25
    };












